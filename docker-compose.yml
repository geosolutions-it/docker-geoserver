version: "3"
networks:
  geoserver-network:
    driver: bridge
services:
  postgres:
    image: postgis/postgis
    deploy:
      replicas: 0
    container_name: postgres
    restart: unless-stopped
    healthcheck:
      test: /usr/bin/pg_isready -U postgres
      interval: 5s
      timeout: 10s
      retries: 120
    ports:
      - 5432
    env_file:
      - ./postgres/postgres.env
    volumes:
      - pg_data:${PGDATA:-/var/lib/postgresql/data}:rw
      - ./postgres/01-init-user.sh:/docker-entrypoint-initdb.d/01-init-user.sh
    networks:
      - geoserver-network

  geoserver:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        GEOSERVER_WEBAPP_SRC: "https://sourceforge.net/projects/geoserver/files/GeoServer/2.23.3/geoserver-2.23.3-war.zip/download"
        PLUG_IN_URLS: "http://sourceforge.net/projects/geoserver/files/GeoServer/2.23.3/extensions/geoserver-2.23.3-control-flow-plugin.zip http://sourceforge.net/projects/geoserver/files/GeoServer/2.23.3/extensions/geoserver-2.23.3-monitor-plugin.zip http://sourceforge.net/projects/geoserver/files/GeoServer/2.23.3/extensions/geoserver-2.23.3-authkey-plugin.zip"
    container_name: geoserver
    restart: unless-stopped
    healthcheck:
      test: /usr/bin/curl --fail http://127.0.0.1:8080/geoserver/styles/raster.sld || exit 1
      interval: 5s
      timeout: 10s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8080
    env_file:
      - .env
    volumes:
      - /var/lib/docker/geoserver/datadir:${GEOSERVER_DATA_DIR}
      - /var/lib/docker/geoserver/gisdata:${GEOSERVER_DATA}
      - /var/lib/docker/geoserver/logs:${GEOSERVER_LOG_DIR}
      - /var/lib/docker/geoserver/gwc_config:${GEOWEBCACHE_CONFIG_DIR}
      - /var/lib/docker/geoserver/gwc:${GEOWEBCACHE_CACHE_DIR}
      - /var/lib/docker/geoserver/netcfd:${NETCDF_DATA_DIR}
      - /var/lib/docker/geoserver/grib_cache:${GRIB_CACHE_DIR}
      - /var/lib/docker/geoserver/tomcat_logs:${TOMCAT_LOG_DIR}
    secrets:
      - source: context.xml
        target: /usr/local/tomcat/conf/context.xml
    networks:
      - geoserver-network

  proxy:
    image: nginx
    container_name: proxy
    volumes:
      - ./configs/proxy/geoserver.conf:/etc/nginx/conf.d/default.conf:rw
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost/geoserver"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - geoserver
    networks:
      - geoserver-network
    secrets:
      - source: geoserver.pem
        target: /etc/ssl/certs/geoserver.pem
      - source: geoserver.key
        target: /etc/ssl/certs/geoserver.key
      - source: ca-bundle.pem
        target: /etc/ssl/certs/ca-bundle.pem

volumes:
  pg_data:
  pgadmin_data:
  logs:
  gwc_config:
  gwc:
  netcfd:
  grib_cache:
  tomcat_logs:

secrets:
  #geosrver
  context.xml:
    file: ./secrets/geoserver/context.xml
  geofence-db-config:
    file: ./secrets/geoserver/geofence-datasource-ovr.properties
  # proxy
  geoserver.pem:
    file: ./secrets/proxy/geoserver.pem
  geoserver.key:
    file: ./secrets/proxy/geoserver.key
  ca-bundle.pem:
    file: ./secrets/proxy/ca-bundle.pem
